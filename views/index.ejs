<html>
    <header>
        <title>Chatroom</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="styles/index.css" rel="stylesheet" type="text/css"/>
    </header>
    <body>
        <form action="/logout" method="POST" id="logoutForm">
            <input type="submit" value="Logout" id="logout">
        </form>
        <div id="box">
            <div id="chat">
                <ul id="msgBox">
                </ul>
            </div>
            <div id="chatbox">
                <form action="" id="msgForm" class="flex-container" style="flex-grow: 9">
                    <label for="msg" id="msglbl">C:\Users\<%= name %>></label>
                    <input id="msg" type="text" name="msg" required placeholder="" autocomplete="off"/>
                </form>
                <button id="gifsbtn" style="flex-grow: 1">gifs</button>
            </div>
        </div>
        <div id="gifsmodal" class="modal">
            <form action="" id="gifsform">
                <input type="text" name="term" id="term">
                <button type="button" id='close'>close</button>
              </form>
              <div id="gifs">

              </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.7.0.js"></script>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            // SOCKET STUFF
            let socket = io();
            socket.emit('joining msg', `<%= name %>`);

            $('#gifsform').submit((e) => {
                e.preventDefault();
            })

            $('#msgForm').submit((e) => {
                e.preventDefault();
                if($("li").length > 75){
                    $("#msgBox").empty();
                }
                socket.emit('chat message', (`<%= name %>` + ':  ' + $('#msg').val()));
                $('#msgBox').append($('<li class="left">').text('You: ' + $('#msg').val()));
                $('#msg').val('');
                $('#chat').scrollTop($('#chat')[0].scrollHeight);
            });

            socket.on('chat message', function(msg){
      			$('#msgBox').append($('<li class="right">').text(msg));
    		});

            socket.on('img message', function(img){
                let img_gif = document.createElement('img');
                img_gif.src = img
      			$('#msgBox').append($('<li class="right">').append(img_gif));
    		});

            // MODAL STUFF
            let modal = document.getElementById("gifsmodal");
            let btn = document.getElementById("gifsbtn");

            window.onclick = function(event) {
                if (event.target !== modal && event.target !== btn && event.target !== document.getElementById("gifsubmit") && event.target !== document.getElementById("term")) {
                        modal.style.display = "none";
                        $('#gifs').empty();
                }
            } 

            btn.onclick = function() {
                $("#term").val('');
                search_term = $("#term").val();
                modal.style.display = "block";
                grab_data();
            }


            function httpGetAsync(theUrl, callback) {
                // create the request object
                var xmlHttp = new XMLHttpRequest();

                // set the state change callback to capture when the response comes in
                xmlHttp.onreadystatechange = function()
                {
                    if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                    {
                        callback(xmlHttp.responseText);
                    }
                }

                // open as a GET call, pass in the url and set async = True
                xmlHttp.open("GET", theUrl, true);

                // call send with no params as they were passed in on the url string
                xmlHttp.send(null);

                return;
            }

            var top_gifs;
            // callback for the top GIFs of search
            function tenorCallback_search(responsetext)
            {
                // Parse the JSON response
                var response_objects = JSON.parse(responsetext);

                top_gifs = response_objects["results"];
                top_gifs.forEach((gifObj, i=0) => {
                    var img_gif = document.createElement('img');
                    img_gif.setAttribute("id", i++);
                    img_gif.src = gifObj.media_formats.nanogif.url;
                    document.getElementById('gifs').appendChild(img_gif);
                    img_gif.addEventListener('click',(e) =>{
                        console.log(e.target.getAttribute("id"));
                        console.log(e.target);
                        socket.emit('img message', e.target.src);
                        $('#msgBox').append($('<li class="left">').text('You: ').append(e.target));
                    });
                });
                return;
            }

            var search_term = "hello";

            function grab_data(){
                var apikey = "AIzaSyDl0jUTl1a4cmzX9n-bQcFzdLXTrMOOBzM"
                var clientkey = "coet295-chatroom"
                var lmt = 50;
                
                if(search_term.length <= 0)
                {
                    search_term = "hello";
                }

                var search_url = "https://tenor.googleapis.com/v2/search?q=" + search_term + "&key=" +
                    apikey +"&client_key=" + clientkey +  "&limit=" + lmt;
                httpGetAsync(search_url, tenorCallback_search);
                return
            }

            

            $("#term").on('input', () => {
                $('#gifs').empty();
                search_term = $("#term").val();
                grab_data();
            })

            
        </script>

    </body>

</html>